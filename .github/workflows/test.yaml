name: Run Tests

# do not run automatically
on:
  workflow_call:
  workflow_dispatch:


jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [alpine, debian, ubuntu, opensuse , fedora, redhat-ubi8, almalinux, rockylinux]
        init:     [true, false]
        arch:     [amd64, arm64]
        experimental: [false]
        include:
          - platform: amazonlinux
            init: [true, false]
            arch: [amd64, arm64]
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    env:
      FISSION_DOCKER_INIT: ${{ matrix.init }}
    steps:
    - 
      name: Fetch Dependencies
      run: sudo apt install -qq -y jq moreutils
    - 
      name: Clone
      uses: actions/checkout@v2
    - 
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      # allow step to fail; image will not be reused but be built locally
      name: Fetch prebuilt base image
      uses: actions/download-artifact@v2
      continue-on-error: true
      with:
        name: fission_base_image-${{ matrix.arch }}
        path: /tmp
    - 
      # allow step to fail; image will not be reused but be built locally
      # run-on-arch should use loaded image, as same docker 
      name: Load prebuilt base image
      continue-on-error: true
      run: docker load --input /tmp/fission.tar
    -
      name: "Build test image: [${{ matrix.platform }}][${{ matrix.arch }}]"
      uses: docker/build-push-action@v2
      with:
        context: ./test/platforms/${{ matrix.platform }}
        tags: fission:${{ matrix.platform }}
        platforms: linux/${{ matrix.arch }}
        load: true
    - 
      name: Run Tests [amd64]
      if: ${{ matrix.platform  != 'arm64' }}
      working-directory: test
      env:
        FISSION_PLATFORM: ${{ matrix.platform }}
      run: ./test.bash -t
    - 
      name: Run tests [arm64]
      if: ${{ matrix.platform  == 'arm64' }}
      uses: uraimo/run-on-arch-action@v2.1.1
      with:
        env: |
          FISSION_PLATFORM: ${{ matrix.platform }}
        arch: aarch64
        distro: ubuntu20.04
        run: |
          cd test
          ./test.bash -t
    - 
      name: "Prepare status artifact [${{ matrix.platform }}][init: ${{ matrix.init }}][arch: ${{ matrix.arch }}] ([status_${{ matrix.arch }}_init-${{ matrix.init }}])"
      if: ${{ always() }}
      run: |
        mkdir -p status &&
        echo '{}' | jq --arg job "${{ matrix.platform }}" '. + {job: $job}' > status/${{ matrix.platform }}.json
    - 
      name: Finalize status artifact @success
      if: ${{ success() }}
      run: |
        cat status/${{ matrix.platform }}.json | jq --argjson success true '. + {success: $success}' | sponge status/${{ matrix.platform }}.json
    - 
      name: Finalize status artifact @failure
      if: ${{ failure() }}
      run: |
        cat status/${{ matrix.platform }}.json | jq --argjson success false '. + {success: $success}' | sponge status/${{ matrix.platform }}.json
    - 
      name: Add ${{ matrix.platform }}.json to status artifact [status_${{ matrix.arch }}_init-${{ matrix.init }}]
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: status_${{ matrix.arch }}_init-${{ matrix.init }}
        path: status/




