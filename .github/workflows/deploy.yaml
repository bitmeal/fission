name: Deploy Container

on:
  push:
    tags:
      - v*
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    uses: ./.github/workflows/test.yaml

  prepare:
    needs:
      - test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.num }}
      tag: ${{ steps.tag.outputs.truthy }}
    steps:
      -
        name: Clone
        uses: actions/checkout@v2
      -
        name: Get Version
        id: version
        run: echo ::set-output name=num::${GITHUB_REF#refs/*/}
      -
        name: Is Tag?
        id: tag
        run: echo ::set-output name=truthy::$([[ ${{ steps.version.outputs.num }} =~ ^v([0-9]+\.){2}[0-9]+([-\+].*)?$ ]] && echo 'true' || echo 'false')
      -
        name: Log Output
        run: "echo tag string: ${{ steps.version.outputs.num }}; echo is tag: ${{ steps.tag.outputs.truthy }}"

  report:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        check-latest: true
    - name: Fetch Dependencies
      working-directory: helpers
      run: sudo apt install -qq -y jq && npm ci
    - name: Fetch matrix jobs status artifacts
      uses: actions/download-artifact@v2
      with:
        path: platforms
    - name: Build Matrix Badges
      run: |
        jq -s '.' platforms/status/*.json | node helpers/badgebuilder.js > badges.svg
    - name: Deploy Badges
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_TOKEN }}
        gist_id: 07de6fdf05546612b9abfbc85a2beafc
        gist_description: "https://github.com/bitmeal/fission test job badges"
        gist_file_name: fission_badges.svg
        file_path: ./badges.svg

  docker:
    needs:
      - test
      - prepare
    runs-on: ubuntu-latest
    steps:
      -
        name: Clone
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push x64 image to ghcr.io
        run: docker buildx build --push --tag "ghcr.io/bitmeal/fission:$([[ ${{ needs.prepare.outputs.tag }} == 'true' ]] && echo latest || echo edge)" $([[ ${{ needs.prepare.outputs.tag }} == 'true' ]] && echo "--tag ghcr.io/bitmeal/fission:${{ needs.prepare.outputs.version }}") .
